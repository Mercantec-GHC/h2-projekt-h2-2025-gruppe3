@page "/hotel/{hotelId:int}/room/{roomId:int}"
@using DomainModels
@inject Blazor.Services.APIService ApiService
@using System.Net.Http

<PageTitle>Suite Dreams - Room</PageTitle>
@if (rooms == null)
{
	<p><em>Loading rooms...</em></p>
}
else if (rooms.Length == 0)
{
	<div class="alert alert-info">No rooms found.</div>
}
else
{
	<div class="justify-content-center">

	@foreach (var r in rooms)
		{
			if (r.Id == roomId)
			{
			<div class="card m-1 h-25">
				<div class="h-100">
					<div class="card-body border-bottom gy-1 text-nowrap">
						<div class="fw-bold mb-2">@r.RoomNumber</div>
						<div class="text-end">
						</div>
					</div>

					<div class="card-body">
						<span class="mx-1"></span>
						<div class="text-center">
							<div class="active text-alert fw-semibold me-1"></div>
						</div>
					</div>
				</div>
			</div>
			}
		}
	</div>
}

@code {
	[Parameter]
	public int hotelId { get; set; } // Denne parameter binder værdien fra URL'en

	[Parameter]
	public int roomId { get; set; } // Denne parameter binder værdien fra URL'en

	private RoomGetDto[]? rooms;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			rooms = await ApiService.GetRoomsAsync(0);
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Fejl ved hentning af rum: {ex.Message}");
			rooms = Array.Empty<RoomGetDto>();
		}
	}
}
